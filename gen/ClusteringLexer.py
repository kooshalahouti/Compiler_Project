# Generated from D:/uni/Compiler/finalProject/pythonProject/grammar/Clustering.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,27,306,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
        1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,
        5,20,213,8,20,10,20,12,20,216,9,20,1,21,1,21,5,21,220,8,21,10,21,
        12,21,223,9,21,1,21,1,21,1,22,4,22,228,8,22,11,22,12,22,229,1,23,
        4,23,233,8,23,11,23,12,23,234,1,23,1,23,4,23,239,8,23,11,23,12,23,
        240,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        3,24,268,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,3,25,298,8,25,1,26,4,26,301,8,26,11,26,
        12,26,302,1,26,1,26,0,0,27,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
        20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,1,0,5,3,0,65,90,95,
        95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,10,10,13,13,34,34,1,0,
        48,57,4,0,9,10,13,13,32,32,125,125,318,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
        1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
        1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,1,55,
        1,0,0,0,3,57,1,0,0,0,5,59,1,0,0,0,7,61,1,0,0,0,9,68,1,0,0,0,11,75,
        1,0,0,0,13,99,1,0,0,0,15,118,1,0,0,0,17,129,1,0,0,0,19,131,1,0,0,
        0,21,139,1,0,0,0,23,152,1,0,0,0,25,160,1,0,0,0,27,171,1,0,0,0,29,
        179,1,0,0,0,31,188,1,0,0,0,33,193,1,0,0,0,35,195,1,0,0,0,37,197,
        1,0,0,0,39,205,1,0,0,0,41,210,1,0,0,0,43,217,1,0,0,0,45,227,1,0,
        0,0,47,232,1,0,0,0,49,267,1,0,0,0,51,297,1,0,0,0,53,300,1,0,0,0,
        55,56,5,40,0,0,56,2,1,0,0,0,57,58,5,44,0,0,58,4,1,0,0,0,59,60,5,
        41,0,0,60,6,1,0,0,0,61,62,5,75,0,0,62,63,5,77,0,0,63,64,5,101,0,
        0,64,65,5,97,0,0,65,66,5,110,0,0,66,67,5,115,0,0,67,8,1,0,0,0,68,
        69,5,68,0,0,69,70,5,66,0,0,70,71,5,83,0,0,71,72,5,67,0,0,72,73,5,
        65,0,0,73,74,5,78,0,0,74,10,1,0,0,0,75,76,5,65,0,0,76,77,5,103,0,
        0,77,78,5,103,0,0,78,79,5,108,0,0,79,80,5,111,0,0,80,81,5,109,0,
        0,81,82,5,101,0,0,82,83,5,114,0,0,83,84,5,97,0,0,84,85,5,116,0,0,
        85,86,5,105,0,0,86,87,5,118,0,0,87,88,5,101,0,0,88,89,5,67,0,0,89,
        90,5,108,0,0,90,91,5,117,0,0,91,92,5,115,0,0,92,93,5,116,0,0,93,
        94,5,101,0,0,94,95,5,114,0,0,95,96,5,105,0,0,96,97,5,110,0,0,97,
        98,5,103,0,0,98,12,1,0,0,0,99,100,5,83,0,0,100,101,5,112,0,0,101,
        102,5,101,0,0,102,103,5,99,0,0,103,104,5,116,0,0,104,105,5,114,0,
        0,105,106,5,97,0,0,106,107,5,108,0,0,107,108,5,67,0,0,108,109,5,
        108,0,0,109,110,5,117,0,0,110,111,5,115,0,0,111,112,5,116,0,0,112,
        113,5,101,0,0,113,114,5,114,0,0,114,115,5,105,0,0,115,116,5,110,
        0,0,116,117,5,103,0,0,117,14,1,0,0,0,118,119,5,110,0,0,119,120,5,
        95,0,0,120,121,5,99,0,0,121,122,5,108,0,0,122,123,5,117,0,0,123,
        124,5,115,0,0,124,125,5,116,0,0,125,126,5,101,0,0,126,127,5,114,
        0,0,127,128,5,115,0,0,128,16,1,0,0,0,129,130,5,61,0,0,130,18,1,0,
        0,0,131,132,5,110,0,0,132,133,5,95,0,0,133,134,5,105,0,0,134,135,
        5,116,0,0,135,136,5,101,0,0,136,137,5,114,0,0,137,138,5,115,0,0,
        138,20,1,0,0,0,139,140,5,114,0,0,140,141,5,97,0,0,141,142,5,110,
        0,0,142,143,5,100,0,0,143,144,5,111,0,0,144,145,5,109,0,0,145,146,
        5,95,0,0,146,147,5,115,0,0,147,148,5,116,0,0,148,149,5,97,0,0,149,
        150,5,116,0,0,150,151,5,101,0,0,151,22,1,0,0,0,152,153,5,101,0,0,
        153,154,5,112,0,0,154,155,5,115,0,0,155,156,5,105,0,0,156,157,5,
        108,0,0,157,158,5,111,0,0,158,159,5,110,0,0,159,24,1,0,0,0,160,161,
        5,109,0,0,161,162,5,105,0,0,162,163,5,110,0,0,163,164,5,95,0,0,164,
        165,5,115,0,0,165,166,5,97,0,0,166,167,5,109,0,0,167,168,5,112,0,
        0,168,169,5,108,0,0,169,170,5,101,0,0,170,26,1,0,0,0,171,172,5,108,
        0,0,172,173,5,105,0,0,173,174,5,110,0,0,174,175,5,107,0,0,175,176,
        5,97,0,0,176,177,5,103,0,0,177,178,5,101,0,0,178,28,1,0,0,0,179,
        180,5,97,0,0,180,181,5,102,0,0,181,182,5,102,0,0,182,183,5,105,0,
        0,183,184,5,110,0,0,184,185,5,105,0,0,185,186,5,116,0,0,186,187,
        5,121,0,0,187,30,1,0,0,0,188,189,5,112,0,0,189,190,5,108,0,0,190,
        191,5,111,0,0,191,192,5,116,0,0,192,32,1,0,0,0,193,194,5,120,0,0,
        194,34,1,0,0,0,195,196,5,121,0,0,196,36,1,0,0,0,197,198,5,100,0,
        0,198,199,5,97,0,0,199,200,5,116,0,0,200,201,5,97,0,0,201,202,5,
        115,0,0,202,203,5,101,0,0,203,204,5,116,0,0,204,38,1,0,0,0,205,206,
        5,102,0,0,206,207,5,105,0,0,207,208,5,108,0,0,208,209,5,101,0,0,
        209,40,1,0,0,0,210,214,7,0,0,0,211,213,7,1,0,0,212,211,1,0,0,0,213,
        216,1,0,0,0,214,212,1,0,0,0,214,215,1,0,0,0,215,42,1,0,0,0,216,214,
        1,0,0,0,217,221,5,34,0,0,218,220,8,2,0,0,219,218,1,0,0,0,220,223,
        1,0,0,0,221,219,1,0,0,0,221,222,1,0,0,0,222,224,1,0,0,0,223,221,
        1,0,0,0,224,225,5,34,0,0,225,44,1,0,0,0,226,228,7,3,0,0,227,226,
        1,0,0,0,228,229,1,0,0,0,229,227,1,0,0,0,229,230,1,0,0,0,230,46,1,
        0,0,0,231,233,7,3,0,0,232,231,1,0,0,0,233,234,1,0,0,0,234,232,1,
        0,0,0,234,235,1,0,0,0,235,236,1,0,0,0,236,238,5,46,0,0,237,239,7,
        3,0,0,238,237,1,0,0,0,239,240,1,0,0,0,240,238,1,0,0,0,240,241,1,
        0,0,0,241,48,1,0,0,0,242,243,5,119,0,0,243,244,5,97,0,0,244,245,
        5,114,0,0,245,268,5,100,0,0,246,247,5,99,0,0,247,248,5,111,0,0,248,
        249,5,109,0,0,249,250,5,112,0,0,250,251,5,108,0,0,251,252,5,101,
        0,0,252,253,5,116,0,0,253,268,5,101,0,0,254,255,5,97,0,0,255,256,
        5,118,0,0,256,257,5,101,0,0,257,258,5,114,0,0,258,259,5,97,0,0,259,
        260,5,103,0,0,260,268,5,101,0,0,261,262,5,115,0,0,262,263,5,105,
        0,0,263,264,5,110,0,0,264,265,5,103,0,0,265,266,5,108,0,0,266,268,
        5,101,0,0,267,242,1,0,0,0,267,246,1,0,0,0,267,254,1,0,0,0,267,261,
        1,0,0,0,268,50,1,0,0,0,269,270,5,101,0,0,270,271,5,117,0,0,271,272,
        5,99,0,0,272,273,5,108,0,0,273,274,5,105,0,0,274,275,5,100,0,0,275,
        276,5,101,0,0,276,277,5,97,0,0,277,298,5,110,0,0,278,279,5,108,0,
        0,279,298,5,49,0,0,280,281,5,108,0,0,281,298,5,50,0,0,282,283,5,
        109,0,0,283,284,5,97,0,0,284,285,5,110,0,0,285,286,5,104,0,0,286,
        287,5,97,0,0,287,288,5,116,0,0,288,289,5,116,0,0,289,290,5,97,0,
        0,290,298,5,110,0,0,291,292,5,99,0,0,292,293,5,111,0,0,293,294,5,
        115,0,0,294,295,5,105,0,0,295,296,5,110,0,0,296,298,5,101,0,0,297,
        269,1,0,0,0,297,278,1,0,0,0,297,280,1,0,0,0,297,282,1,0,0,0,297,
        291,1,0,0,0,298,52,1,0,0,0,299,301,7,4,0,0,300,299,1,0,0,0,301,302,
        1,0,0,0,302,300,1,0,0,0,302,303,1,0,0,0,303,304,1,0,0,0,304,305,
        6,26,0,0,305,54,1,0,0,0,9,0,214,221,229,234,240,267,297,302,1,6,
        0,0
    ]

class ClusteringLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    VAR = 21
    STRING = 22
    NUM = 23
    FLOAT = 24
    LINKAGE_TYPE = 25
    AFFINITY_TYPE = 26
    WS = 27

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "'KMeans'", "'DBSCAN'", "'AgglomerativeClustering'", 
            "'SpectralClustering'", "'n_clusters'", "'='", "'n_iters'", 
            "'random_state'", "'epsilon'", "'min_sample'", "'linkage'", 
            "'affinity'", "'plot'", "'x'", "'y'", "'dataset'", "'file'" ]

    symbolicNames = [ "<INVALID>",
            "VAR", "STRING", "NUM", "FLOAT", "LINKAGE_TYPE", "AFFINITY_TYPE", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "VAR", "STRING", "NUM", "FLOAT", "LINKAGE_TYPE", "AFFINITY_TYPE", 
                  "WS" ]

    grammarFileName = "Clustering.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


